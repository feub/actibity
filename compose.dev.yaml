services:
  db:
    image: postgres
    env_file: .env
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  adminer:
    image: adminer
    ports:
      - 8080:8080
    container_name: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my_network

  next-app:
    container_name: next-app
    build:
      context: ./next-app
      dockerfile: dev.Dockerfile

    # Set environment variables directly in the compose file
    # environment:
    #   ENV_VARIABLE: ${ENV_VARIABLE}
    #   NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}

    # Set environment variables based on the .env file
    env_file:
      - .env
    volumes:
      - ./next-app/src:/app/src
      - ./next-app/public:/app/public
      - ./next-app/prisma:/app/prisma
      - ./next-app/generated:/app/generated
    restart: always
    ports:
      - 3000:3000
    networks:
      - my_network

volumes:
  db_data:

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  my_network:
    external: true